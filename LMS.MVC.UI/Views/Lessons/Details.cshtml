@model LMS.MVC.DATA.EF.Lesson

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Lesson</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LessonTitle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LessonTitle)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Introduction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Introduction)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.VideoURL)
        </dt>

        <dd>
            <div id="player">

            </div>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PdfFilename)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PdfFilename)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Course.CourseName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Course.CourseName)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.LessonId }) |
    @if (User.IsInRole("HR"))
    {
        @Html.ActionLink("Back to List", "Index")
    }
    else if (User.IsInRole("Employee"))
    {
    @Html.ActionLink("Back to List", "EmpLessons")
    }
</p>
<script src="http://youtube.com/player_api"></script>

<script>
    var player;
    var h = '@ViewBag.height';
    var w = '@ViewBag.width';
    function onYouTubePlayerAPIReady() {
        player = new YT.Player('player', {
            height: 360,
            width: 640,
            modestbranding: 1,
            videoId: '@ViewBag.VideoID',
            playerVars: {
                rel: 0,
                autoplay: 0,
                disablekb: 0,
                showsearch: 0,
                showinfo: 0,
                controls: 1,
                fs: 1,
                hd: 1,
                html5: 1,
                iv_load_policy: 3
            },
            events: {
                onReady: onPlayerReady,
                onStateChange: onPlayerStateChange
            }
        });
    }
    function onPlayerReady(event) {
        event.target.playerVideo();
    }

    function onPlayerStateChange(event) {
        if (event.data == 0) {
            alert('done');
        }
    }
</script>
